plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.8'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'jpa'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.0.13.Final'
//    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-test'

    //DB
//    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }

    implementation 'org.springframework.boot:spring-boot-devtools'

//    implementation 'org.springframework.boot:spring-boot-starter-actuator'

//    implementation 'io.micrometer:micrometer-observation:1.10.8'

    
    //쿼리 파라미터 값 콘솔에 나타내는 코드
    //개발에서는 유용하지만 배포하는 상황에서는 병목이 될 수 있으니까 지우는 것이 낫다.
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
}
